<div class="welcome-section">
  <h2>Welcome to RecipeGram</h2>
  <p>A place to discover and share your favorite recipes with the world.</p>
  <% if (!locals.user) { %>
  <div class="cta-buttons">
    <a href="/register" class="button primary-button">Sign Up</a>
    <a href="/login" class="button secondary-button">Log In</a>
  </div>
  <% } %>
</div>

<div class="recipes-container">
  <% if (locals.error) { %>
    <div class="error-message">
      <%= error %>
    </div>
  <% } %>
  
  <div class="recipes-header">
    <h2>Latest Recipes</h2>
    <div class="category-filter">
      <button id="categoryFilterBtn" class="btn btn-secondary">Categories</button>
      <div id="categoryDropdown" class="category-dropdown">
        <a href="/" class="category-item active">All Categories</a>
        <!-- Categories will be loaded dynamically -->
      </div>
    </div>
  </div>

  <div class="recipe-grid">
    <% if (locals.recipes && recipes.length > 0) { %>
      <% recipes.forEach(recipe => { %>
              <div class="recipe-card-wrapper">
                <% if (locals.user) { %>
                <button class="favorite-button <%= recipe.is_favorite ? 'active' : '' %>" data-recipe-id="<%= recipe.id %>" data-is-favorite="<%= recipe.is_favorite ? 'true' : 'false' %>">
                  <span class="favorite-icon">â™¥</span>
                </button>
                <% } %>
                <a href="/recipe/<%= recipe.id %>" class="recipe-card-link">
                  <div class="recipe-card">
                      <% if (recipe.image_url) { %>
                          <img src="<%= recipe.image_url %>" alt="<%= recipe.title %>" class="recipe-image">
                      <% } else { %>
                          <div class="recipe-image-placeholder">No Image</div>
                      <% } %>
                      <div class="recipe-content">
                          <h3 class="recipe-title"><%= recipe.title %></h3>
                          <span class="recipe-category"><%= recipe.category_name %></span>
                          <p class="recipe-description"><%= recipe.description.substring(0, 100) %><%= recipe.description.length > 100 ? '...' : '' %></p>
                          <div class="recipe-meta">
                              <span>By: <%= recipe.user_email %></span>
                              <span><%= new Date(recipe.created_at).toLocaleDateString() %></span>
                          </div>
                      </div>
                  </div>
                </a>
              </div>
      <% }); %>
    <% } else { %>
      <div class="no-recipes">
        <p>No recipes found. Be the first to add a recipe!</p>
      </div>
    <% } %>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Category dropdown functionality
    const categoryBtn = document.getElementById('categoryFilterBtn');
    const dropdown = document.getElementById('categoryDropdown');
    
    if (categoryBtn) {
      categoryBtn.addEventListener('click', function() {
        dropdown.classList.toggle('show');
        loadCategories();
      });
      
      // Close dropdown when clicking outside
      window.addEventListener('click', function(event) {
        if (!event.target.matches('#categoryFilterBtn') && !event.target.closest('#categoryDropdown')) {
          if (dropdown.classList.contains('show')) {
            dropdown.classList.remove('show');
          }
        }
      });
    }
    
    // Load categories for the dropdown
    function loadCategories() {
      // Only load if not already loaded
      if (dropdown.children.length <= 1) {
        fetch('/api/categories')
          .then(response => response.json())
          .then(categories => {
            categories.forEach(category => {
              const link = document.createElement('a');
              link.href = `/category/${category.slug}`;  // Use slug instead of ID
              link.className = 'category-item';
              link.textContent = category.name;
              link.setAttribute('data-category-slug', category.slug);
              dropdown.appendChild(link);
              
              // Add click event to filter recipes by category
              link.addEventListener('click', function(e) {
                e.preventDefault();
                const categorySlug = this.getAttribute('data-category-slug');
                filterRecipesByCategory(categorySlug);
                
                // Update active class
                document.querySelectorAll('.category-item').forEach(item => {
                  item.classList.remove('active');
                });
                this.classList.add('active');
                
                dropdown.classList.remove('show');
              });
            });
          })
          .catch(error => console.error('Error loading categories:', error));
      }
    }
    
    // Filter recipes by category
    function filterRecipesByCategory(categorySlug) {
      window.location.href = categorySlug ? `/category/${categorySlug}` : '/';
    }
    
    // Handle favorite button clicks
    const favoriteButtons = document.querySelectorAll('.favorite-button');
    
    favoriteButtons.forEach(button => {
      button.addEventListener('click', function(e) {
        e.preventDefault();
        e.stopPropagation();
        
        const recipeId = this.getAttribute('data-recipe-id');
        const isFavorite = this.getAttribute('data-is-favorite') === 'true';
        
        // Toggle favorite status
        const method = isFavorite ? 'DELETE' : 'POST';
        
        fetch(`/api/favorites/${recipeId}`, {
          method: method,
          headers: {
            'Content-Type': 'application/json'
          }
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            // Toggle the active class
            this.classList.toggle('active');
            
            // Update the data attribute
            const newStatus = !isFavorite;
            this.setAttribute('data-is-favorite', newStatus.toString());
            
            // Optional: Show a brief notification
            const action = newStatus ? 'added to' : 'removed from';
            const notification = document.createElement('div');
            notification.className = 'favorite-notification';
            notification.textContent = `Recipe ${action} favorites`;
            document.body.appendChild(notification);
            
            setTimeout(() => {
              notification.remove();
            }, 2000);
          } else {
            console.error('Failed to update favorite:', data.error);
          }
        })
        .catch(error => {
          console.error('Error updating favorite status:', error);
        });
      });
    });
  });
</script>

<style>
  .recipes-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
  }
  
  .category-filter {
    position: relative;
  }
  
  .category-dropdown {
    display: none;
    position: absolute;
    right: 0;
    background-color: white;
    min-width: 200px;
    box-shadow: 0 8px 16px rgba(0,0,0,0.1);
    z-index: 1;
    border-radius: 4px;
    overflow: hidden;
  }
  
  .category-dropdown.show {
    display: block;
  }
  
  .category-item {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    border-bottom: 1px solid #f0f0f0;
  }
  
  .category-item:hover {
    background-color: #f9f9f9;
  }
  
  .category-item.active {
    background-color: #ffeeee;
    color: #ff6b6b;
  }
  
  .recipe-image-placeholder {
    height: 200px;
    background-color: #f0f0f0;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #999;
  }
  
  .no-recipes {
    grid-column: span 3;
    text-align: center;
    padding: 40px;
    background-color: #f9f9f9;
    border-radius: 8px;
  }
  
  .btn-secondary {
    background-color: white;
    color: #666;
    border: 1px solid #ddd;
    padding: 8px 15px;
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.3s;
  }
  
  .btn-secondary:hover {
    background-color: #f5f5f5;
  }
  
  .recipe-card-wrapper {
    position: relative;
  }
  
  .favorite-button {
    position: absolute;
    top: 10px;
    right: 10px;
    background: none;
    border: none;
    color: #ff6b6b;
    font-size: 18px;
    cursor: pointer;
    transition: transform 0.3s;
  }
  
  .favorite-button:hover {
    transform: scale(1.1);
  }
  
  .favorite-button.active {
    color: #e74c3c;
  }
  
  .favorite-notification {
    position: fixed;
    top: 20px;
    right: 20px;
    background-color: #333;
    color: white;
    padding: 10px 15px;
    border-radius: 4px;
    z-index: 1000;
    animation: slideIn 0.5s, fadeOut 0.5s 2.5s;
  }
  
  @keyframes slideIn {
    from {
      transform: translateY(-10px);
      opacity: 0;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }
  
  @keyframes fadeOut {
    from {
      opacity: 1;
    }
    to {
      opacity: 0;
    }
  }
</style>